import tkinter as tk
from tkinter import messagebox

class TaskManager:
    def __init__(self, root):
        self.root = root
        self.root.title("Gestor de Tareas")
        self.root.geometry("400x400")
        
        self.tasks = []
        
        self.entry = tk.Entry(root, width=40)
        self.entry.pack(pady=10)
        self.entry.bind("<Return>", self.add_task)
        
        self.task_listbox = tk.Listbox(root, width=50, height=15)
        self.task_listbox.pack()
        
        self.add_button = tk.Button(root, text="Añadir Tarea", command=self.add_task)
        self.add_button.pack(pady=5)
        
        self.complete_button = tk.Button(root, text="Marcar como Completada", command=self.mark_completed)
        self.complete_button.pack(pady=5)
        
        self.delete_button = tk.Button(root, text="Eliminar Tarea", command=self.delete_task)
        self.delete_button.pack(pady=5)
        
        self.root.bind("<c>", self.mark_completed)
        self.root.bind("<d>", self.delete_task)
        self.root.bind("<Delete>", self.delete_task)
        self.root.bind("<Escape>", lambda e: root.quit())
        
    def add_task(self, event=None):
        task = self.entry.get().strip()
        if task:
            self.tasks.append((task, False))  # (nombre, estado de completado)
            self.task_listbox.insert(tk.END, task)
            self.entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "La tarea no puede estar vacía")
    
    def mark_completed(self, event=None):
        try:
            selected_index = self.task_listbox.curselection()[0]
            task, completed = self.tasks[selected_index]
            if not completed:
                self.tasks[selected_index] = (task, True)
                self.task_listbox.delete(selected_index)
                self.task_listbox.insert(selected_index, f"✔ {task}")
            else:
                messagebox.showinfo("Info", "Esta tarea ya está completada")
        except IndexError:
            messagebox.showwarning("Advertencia", "Seleccione una tarea para completar")
    
    def delete_task(self, event=None):
        try:
            selected_index = self.task_listbox.curselection()[0]
            del self.tasks[selected_index]
            self.task_listbox.delete(selected_index)
        except IndexError:
            messagebox.showwarning("Advertencia", "Seleccione una tarea para eliminar")

if __name__ == "__main__":
    root = tk.Tk()
    app = TaskManager(root)
    root.mainloop()
